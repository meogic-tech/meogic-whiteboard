name: Whiteboard Tests

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  integrity:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.15.1]
    env:
      CI: true
      GITHUB_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i -g npm@8
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-v${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - run: npm run ci-check
      - run: npm run build
      - run: npm run build-www

  unit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.15.1]
    env:
      CI: true
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i -g npm@8
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-v${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - run: npm run test-unit



  e2e-mac:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [16.15.1]
        browser: ['chromium', 'firefox', 'webkit']
        editor-mode: ['rich-text', 'plain-text']
        events-mode: ['legacy-events', 'modern-events']
    env:
      CI: true
      E2E_EDITOR_MODE: ${{ matrix.editor-mode }}
      E2E_EVENTS_MODE: ${{ matrix.events-mode }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i -g npm@8
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
            packages/playwright-core/node_modules
            ~/Library/Caches/ms-playwright
          key: ${{ runner.os }}-v${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Download browsers
        run: npx playwright install
      - run: npm run test-e2e-ci-${{ matrix.browser }}
      - name: Upload Artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results
          path: test-results/
          retention-days: 7

  e2e-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.15.1]
        browser: ['chromium', 'firefox']
        editor-mode: ['rich-text', 'plain-text']
        events-mode: ['legacy-events', 'modern-events']
    env:
      CI: true
      E2E_EDITOR_MODE: ${{ matrix.editor-mode }}
      E2E_EVENTS_MODE: ${{ matrix.events-mode }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: install required packages
        run: |
          sudo apt-get update
          sudo apt-get install xvfb
      - run: npm i -g npm@8
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
            packages/playwright-core/node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-v${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Download browsers
        run: npx playwright install
      - run: npm run test-e2e-ci-${{ matrix.browser }}
      - name: Upload Artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results
          path: test-results/
          retention-days: 7

  e2e-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [16.15.1]
        browser: ['chromium', 'firefox']
        editor-mode: ['rich-text', 'plain-text']
        events-mode: ['legacy-events', 'modern-events']
    env:
      CI: true
      E2E_EDITOR_MODE: ${{ matrix.editor-mode }}
      E2E_EVENTS_MODE: ${{ matrix.events-mode }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i -g npm@8
      # - uses: actions/cache@v3
      #   id: cache
      #   with:
      #     path: |
      #       node_modules
      #       C:\Users\runneradmin\AppData\Local\ms-playwright
      #     key: ${{ runner.os }}-v${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json') }}
      # - name: Install dependencies
      #   if: steps.cache.outputs.cache-hit != 'true'
      - run: npm ci
      - name: Download browsers
        run: npx playwright install
      - run: npm run test-e2e-ci-${{ matrix.browser }}
      - name: Upload Artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results
          path: ~/.npm/_logs/
          retention-days: 7

